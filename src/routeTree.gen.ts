/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as AnalyticsRouteImport } from "./routes/analytics";
import { Route as IndexRouteImport } from "./routes/index";

const AnalyticsRoute = AnalyticsRouteImport.update({
  id: "/analytics",
  path: "/analytics",
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/analytics": typeof AnalyticsRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/analytics": typeof AnalyticsRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/analytics": typeof AnalyticsRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/analytics";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/analytics";
  id: "__root__" | "/" | "/analytics";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AnalyticsRoute: typeof AnalyticsRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/analytics": {
      id: "/analytics";
      path: "/analytics";
      fullPath: "/analytics";
      preLoaderRoute: typeof AnalyticsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

import type { getRouter } from "./router.tsx";
import type { startInstance } from "./start.tsx";
declare module "@tanstack/react-start" {
  interface Register {
    ssr: true;
    router: Awaited<ReturnType<typeof getRouter>>;
    config: Awaited<ReturnType<typeof startInstance.getOptions>>;
  }
}
